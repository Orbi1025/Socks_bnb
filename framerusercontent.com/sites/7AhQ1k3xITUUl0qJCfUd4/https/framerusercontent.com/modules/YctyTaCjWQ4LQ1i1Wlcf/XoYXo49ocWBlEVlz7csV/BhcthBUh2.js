// Generated by Framer (ed41f9e)
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ComponentViewportProvider,
  ControlType,
  cx,
  getFonts,
  Link,
  RichText,
  SmartComponentScopedContainer,
  useActiveVariantCallback,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import { Icon as Phosphor } from "/framerusercontent.com/modules/tYScH7LTqUtz5KUaUAYP/p8dptk4UIND8hbFWz9V7/Phosphor.js";
const PhosphorFonts = getFonts(Phosphor);
const enabledGestures = {
  JCTf0Lob7: { hover: true },
  mS8fuDLXY: { hover: true },
};
const cycleOrder = ["mS8fuDLXY", "JCTf0Lob7"];
const serializationHash = "framer-63s3w";
const variantClassNames = {
  JCTf0Lob7: "framer-v-1ftmo96",
  mS8fuDLXY: "framer-v-1vw9pco",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
const transition1 = {
  damping: 50,
  delay: 0,
  mass: 1,
  stiffness: 500,
  type: "spring",
};
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)]
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
  "Button Small": "JCTf0Lob7",
  Button: "mS8fuDLXY",
};
const getProps = ({
  buttonText,
  click,
  height,
  id,
  link,
  newTab,
  smoothScroll,
  width,
  ...props
}) => {
  return {
    ...props,
    ICI1DQSJ0: buttonText ?? props.ICI1DQSJ0 ?? "Button",
    LkLxoE1IH: newTab ?? props.LkLxoE1IH,
    MaURTmcAp: smoothScroll ?? props.MaURTmcAp,
    uRnZpSnxs: link ?? props.uRnZpSnxs,
    variant:
      humanReadableVariantMap[props.variant] ?? props.variant ?? "mS8fuDLXY",
    vjjfUIgp8: click ?? props.vjjfUIgp8,
  };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className,
    layoutId,
    variant,
    ICI1DQSJ0,
    uRnZpSnxs,
    LkLxoE1IH,
    MaURTmcAp,
    vjjfUIgp8,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "mS8fuDLXY",
    enabledGestures,
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } =
    useActiveVariantCallback(baseVariant);
  const onTaphd3ax1 = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (vjjfUIgp8) {
      const res = await vjjfUIgp8(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const isDisplayed = () => {
    if (gestureVariant === "JCTf0Lob7-hover") return true;
    if (baseVariant === "JCTf0Lob7") return true;
    return false;
  };
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId ?? defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsx(Link, {
          href: uRnZpSnxs,
          motionChild: true,
          nodeId: "mS8fuDLXY",
          openInNewTab: LkLxoE1IH,
          scopeId: "BhcthBUh2",
          smoothScroll: MaURTmcAp,
          children: /*#__PURE__*/ _jsxs(motion.a, {
            ...restProps,
            ...gestureHandlers,
            className: `${cx(
              scopingClassNames,
              "framer-1vw9pco",
              className,
              classNames
            )} framer-70rs9f`,
            "data-framer-name": "Button",
            "data-highlight": true,
            layoutDependency: layoutDependency,
            layoutId: "mS8fuDLXY",
            onTap: onTaphd3ax1,
            ref: refBinding,
            style: {
              backgroundColor: "rgb(42, 163, 67)",
              borderBottomLeftRadius: 10,
              borderBottomRightRadius: 10,
              borderTopLeftRadius: 10,
              borderTopRightRadius: 10,
              boxShadow:
                "0px 0px 0px 0px var(--token-65db872c-0c0a-4902-9970-3cf5b7324938, rgba(116, 128, 125, 0.3))",
              ...style,
            },
            variants: {
              "JCTf0Lob7-hover": {
                boxShadow: "0px 0px 0px 3px rgba(42, 163, 67, 0.3)",
              },
              "mS8fuDLXY-hover": {
                boxShadow: "0px 0px 0px 4px rgba(42, 163, 67, 0.3)",
              },
              JCTf0Lob7: {
                borderBottomLeftRadius: 6,
                borderBottomRightRadius: 6,
                borderTopLeftRadius: 6,
                borderTopRightRadius: 6,
              },
            },
            ...addPropertyOverrides(
              {
                "JCTf0Lob7-hover": { "data-framer-name": undefined },
                "mS8fuDLXY-hover": { "data-framer-name": undefined },
                JCTf0Lob7: { "data-framer-name": "Button Small" },
              },
              baseVariant,
              gestureVariant
            ),
            children: [
              /*#__PURE__*/ _jsx(RichText, {
                __fromCanvasComponent: true,
                children: /*#__PURE__*/ _jsx(React.Fragment, {
                  children: /*#__PURE__*/ _jsx(motion.p, {
                    style: {
                      "--font-selector": "R0Y7UnViaWstNTAw",
                      "--framer-font-family":
                        '"Rubik", "Rubik Placeholder", sans-serif',
                      "--framer-font-size": "18px",
                      "--framer-font-weight": "500",
                      "--framer-letter-spacing": "-0.01em",
                      "--framer-text-color":
                        "var(--extracted-r6o4lv, var(--token-dc176b44-76f2-4d82-b520-17c069e6ae09, rgb(255, 255, 255)))",
                    },
                    children: "Button",
                  }),
                }),
                className: "framer-j3f989",
                fonts: ["GF;Rubik-500"],
                layoutDependency: layoutDependency,
                layoutId: "cR7HiMGmP",
                style: {
                  "--extracted-r6o4lv":
                    "var(--token-dc176b44-76f2-4d82-b520-17c069e6ae09, rgb(255, 255, 255))",
                  "--framer-link-text-color": "rgb(0, 153, 255)",
                  "--framer-link-text-decoration": "underline",
                },
                text: ICI1DQSJ0,
                verticalAlignment: "top",
                withExternalLayout: true,
                ...addPropertyOverrides(
                  {
                    "JCTf0Lob7-hover": {
                      children: /*#__PURE__*/ _jsx(React.Fragment, {
                        children: /*#__PURE__*/ _jsx(motion.p, {
                          style: {
                            "--font-selector": "R0Y7UnViaWstcmVndWxhcg==",
                            "--framer-font-family":
                              '"Rubik", "Rubik Placeholder", sans-serif',
                            "--framer-font-size": "14px",
                            "--framer-letter-spacing": "-0.01em",
                            "--framer-text-color":
                              "var(--extracted-r6o4lv, var(--token-dc176b44-76f2-4d82-b520-17c069e6ae09, rgb(255, 255, 255)))",
                          },
                          children: "Button",
                        }),
                      }),
                      fonts: ["GF;Rubik-regular"],
                    },
                    JCTf0Lob7: {
                      children: /*#__PURE__*/ _jsx(React.Fragment, {
                        children: /*#__PURE__*/ _jsx(motion.p, {
                          style: {
                            "--font-selector": "R0Y7UnViaWstNTAw",
                            "--framer-font-family":
                              '"Rubik", "Rubik Placeholder", sans-serif',
                            "--framer-font-size": "14px",
                            "--framer-font-weight": "500",
                            "--framer-letter-spacing": "-0.01em",
                            "--framer-text-color":
                              "var(--extracted-r6o4lv, var(--token-dc176b44-76f2-4d82-b520-17c069e6ae09, rgb(255, 255, 255)))",
                          },
                          children: "Button",
                        }),
                      }),
                    },
                  },
                  baseVariant,
                  gestureVariant
                ),
              }),
              isDisplayed() &&
                /*#__PURE__*/ _jsx(ComponentViewportProvider, {
                  children: /*#__PURE__*/ _jsx(SmartComponentScopedContainer, {
                    className: "framer-dwnxh5-container",
                    isAuthoredByUser: true,
                    isModuleExternal: true,
                    layoutDependency: layoutDependency,
                    layoutId: "VikCrRSde-container",
                    nodeId: "VikCrRSde",
                    rendersWithMotion: true,
                    scopeId: "BhcthBUh2",
                    style: { rotate: 25 },
                    variants: { "JCTf0Lob7-hover": { rotate: 35 } },
                    children: /*#__PURE__*/ _jsx(Phosphor, {
                      color:
                        "var(--token-dc176b44-76f2-4d82-b520-17c069e6ae09, rgb(255, 255, 255))",
                      height: "100%",
                      iconSearch: "House",
                      iconSelection: "ArrowElbowRight",
                      id: "VikCrRSde",
                      layoutId: "VikCrRSde",
                      mirrored: false,
                      selectByList: true,
                      style: { height: "100%", width: "100%" },
                      weight: "regular",
                      width: "100%",
                    }),
                  }),
                }),
            ],
          }),
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-63s3w.framer-70rs9f, .framer-63s3w .framer-70rs9f { display: block; }",
  ".framer-63s3w.framer-1vw9pco { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 12px 24px 12px 24px; position: relative; text-decoration: none; width: min-content; will-change: var(--framer-will-change-override, transform); }",
  ".framer-63s3w .framer-j3f989 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
  ".framer-63s3w .framer-dwnxh5-container { flex: none; height: 13px; position: relative; width: 14px; }",
  ".framer-63s3w.framer-v-1ftmo96.framer-1vw9pco { gap: 4px; padding: 6px 12px 6px 6px; }",
  ".framer-63s3w.framer-v-1ftmo96 .framer-j3f989 { order: 1; }",
  ".framer-63s3w.framer-v-1ftmo96 .framer-dwnxh5-container { order: 0; }",
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 46
 * @framerIntrinsicWidth 108
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"JCTf0Lob7":{"layout":["auto","auto"]},"SEhPcDf_n":{"layout":["auto","auto"]},"poov5SsQF":{"layout":["auto","auto"]}}}
 * @framerVariables {"ICI1DQSJ0":"buttonText","uRnZpSnxs":"link","LkLxoE1IH":"newTab","MaURTmcAp":"smoothScroll","vjjfUIgp8":"click"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */ const FramerBhcthBUh2 = withCSS(Component, css, "framer-63s3w");
export default FramerBhcthBUh2;
FramerBhcthBUh2.displayName = "Button 3";
FramerBhcthBUh2.defaultProps = { height: 46, width: 108 };
addPropertyControls(FramerBhcthBUh2, {
  variant: {
    options: ["mS8fuDLXY", "JCTf0Lob7"],
    optionTitles: ["Button", "Button Small"],
    title: "Variant",
    type: ControlType.Enum,
  },
  ICI1DQSJ0: {
    defaultValue: "Button",
    displayTextArea: false,
    title: "Button Text",
    type: ControlType.String,
  },
  uRnZpSnxs: { title: "Link", type: ControlType.Link },
  LkLxoE1IH: {
    defaultValue: false,
    title: "New Tab",
    type: ControlType.Boolean,
  },
  MaURTmcAp: {
    defaultValue: false,
    title: "Smooth Scroll",
    type: ControlType.Boolean,
  },
  vjjfUIgp8: { title: "Click", type: ControlType.EventHandler },
});
addFonts(
  FramerBhcthBUh2,
  [
    {
      explicitInter: true,
      fonts: [
        {
          cssFamilyName: "Rubik",
          source: "google",
          style: "normal",
          uiFamilyName: "Rubik",
          url: "https://fonts.gstatic.com/s/rubik/v31/iJWZBXyIfDnIV5PNhY1KTN7Z-Yh-NYi1VU80V4bVkA.woff2",
          weight: "500",
        },
        {
          cssFamilyName: "Rubik",
          source: "google",
          style: "normal",
          uiFamilyName: "Rubik",
          url: "https://fonts.gstatic.com/s/rubik/v31/iJWZBXyIfDnIV5PNhY1KTN7Z-Yh-B4i1VU80V4bVkA.woff2",
          weight: "400",
        },
      ],
    },
    ...PhosphorFonts,
  ],
  { supportsExplicitInterCodegen: true }
);
export const __FramerMetadata__ = {
  exports: {
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    default: {
      type: "reactComponent",
      name: "FramerBhcthBUh2",
      slots: [],
      annotations: {
        framerContractVersion: "1",
        framerImmutableVariables: "true",
        framerDisplayContentsDiv: "false",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"JCTf0Lob7":{"layout":["auto","auto"]},"SEhPcDf_n":{"layout":["auto","auto"]},"poov5SsQF":{"layout":["auto","auto"]}}}',
        framerIntrinsicWidth: "108",
        framerVariables:
          '{"ICI1DQSJ0":"buttonText","uRnZpSnxs":"link","LkLxoE1IH":"newTab","MaURTmcAp":"smoothScroll","vjjfUIgp8":"click"}',
        framerColorSyntax: "true",
        framerAutoSizeImages: "true",
        framerIntrinsicHeight: "46",
        framerComponentViewportWidth: "true",
      },
    },
    __FramerMetadata__: { type: "variable" },
  },
};
//# sourceMappingURL=./BhcthBUh2.map
