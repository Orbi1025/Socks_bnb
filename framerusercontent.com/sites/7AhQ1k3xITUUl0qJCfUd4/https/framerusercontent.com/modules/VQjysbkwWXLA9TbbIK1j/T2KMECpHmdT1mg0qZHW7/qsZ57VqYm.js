// Generated by Framer (ed41f9e)
import { jsx as _jsx } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ControlType,
  cx,
  Link,
  RichText,
  useActiveVariantCallback,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
const enabledGestures = { ScnR6mzJS: { hover: true } };
const cycleOrder = ["ScnR6mzJS", "f9FkCxewy"];
const serializationHash = "framer-OfzAh";
const variantClassNames = {
  f9FkCxewy: "framer-v-1qlep5i",
  ScnR6mzJS: "framer-v-oxulzm",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
const transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)]
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = { Mobile: "f9FkCxewy", Primary: "ScnR6mzJS" };
const getProps = ({ click, height, id, link, title, width, ...props }) => {
  return {
    ...props,
    brFlQ7gXH: click ?? props.brFlQ7gXH,
    jcuP8BOF2: link ?? props.jcuP8BOF2,
    k7NjW2jq9: title ?? props.k7NjW2jq9 ?? "About",
    variant:
      humanReadableVariantMap[props.variant] ?? props.variant ?? "ScnR6mzJS",
  };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className,
    layoutId,
    variant,
    jcuP8BOF2,
    k7NjW2jq9,
    brFlQ7gXH,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "ScnR6mzJS",
    enabledGestures,
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } =
    useActiveVariantCallback(baseVariant);
  const onTap1vt1a6e = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (brFlQ7gXH) {
      const res = await brFlQ7gXH(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId ?? defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsx(Link, {
          href: jcuP8BOF2,
          motionChild: true,
          nodeId: "ScnR6mzJS",
          scopeId: "qsZ57VqYm",
          smoothScroll: true,
          children: /*#__PURE__*/ _jsx(motion.a, {
            ...restProps,
            ...gestureHandlers,
            className: `${cx(
              scopingClassNames,
              "framer-oxulzm",
              className,
              classNames
            )} framer-ay7hb8`,
            "data-framer-name": "Primary",
            "data-highlight": true,
            layoutDependency: layoutDependency,
            layoutId: "ScnR6mzJS",
            onTap: onTap1vt1a6e,
            ref: refBinding,
            style: { ...style },
            ...addPropertyOverrides(
              {
                "ScnR6mzJS-hover": { "data-framer-name": undefined },
                f9FkCxewy: { "data-framer-name": "Mobile" },
              },
              baseVariant,
              gestureVariant
            ),
            children: /*#__PURE__*/ _jsx(RichText, {
              __fromCanvasComponent: true,
              children: /*#__PURE__*/ _jsx(React.Fragment, {
                children: /*#__PURE__*/ _jsx(motion.p, {
                  style: {
                    "--font-selector": "R0Y7UnViaWstNTAw",
                    "--framer-font-family":
                      '"Rubik", "Rubik Placeholder", sans-serif',
                    "--framer-font-weight": "500",
                    "--framer-letter-spacing": "-0.02em",
                    "--framer-line-height": "1.5em",
                    "--framer-text-color":
                      "var(--extracted-r6o4lv, var(--token-1d3eed3f-60b2-4eeb-8b1b-2d0206799803, rgb(38, 38, 38)))",
                  },
                  children: "About",
                }),
              }),
              className: "framer-13rf6tm",
              fonts: ["GF;Rubik-500"],
              layoutDependency: layoutDependency,
              layoutId: "CaLC3tg1G",
              style: {
                "--extracted-r6o4lv":
                  "var(--token-1d3eed3f-60b2-4eeb-8b1b-2d0206799803, rgb(38, 38, 38))",
                "--framer-paragraph-spacing": "0px",
              },
              text: k7NjW2jq9,
              variants: {
                "ScnR6mzJS-hover": { "--extracted-r6o4lv": "rgb(41, 41, 41)" },
              },
              verticalAlignment: "top",
              withExternalLayout: true,
              ...addPropertyOverrides(
                {
                  "ScnR6mzJS-hover": {
                    children: /*#__PURE__*/ _jsx(React.Fragment, {
                      children: /*#__PURE__*/ _jsx(motion.p, {
                        style: {
                          "--font-selector": "R0Y7UnViaWstNTAw",
                          "--framer-font-family":
                            '"Rubik", "Rubik Placeholder", sans-serif',
                          "--framer-font-weight": "500",
                          "--framer-letter-spacing": "-0.02em",
                          "--framer-line-height": "1.5em",
                          "--framer-text-color":
                            "var(--extracted-r6o4lv, rgb(41, 41, 41))",
                        },
                        children: "About",
                      }),
                    }),
                  },
                },
                baseVariant,
                gestureVariant
              ),
            }),
          }),
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-OfzAh.framer-ay7hb8, .framer-OfzAh .framer-ay7hb8 { display: block; }",
  ".framer-OfzAh.framer-oxulzm { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; text-decoration: none; width: min-content; }",
  ".framer-OfzAh .framer-13rf6tm { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }",
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 24
 * @framerIntrinsicWidth 46
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"f9FkCxewy":{"layout":["auto","auto"]},"hnvpbaG7F":{"layout":["auto","auto"]}}}
 * @framerVariables {"jcuP8BOF2":"link","k7NjW2jq9":"title","brFlQ7gXH":"click"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */ const FramerqsZ57VqYm = withCSS(Component, css, "framer-OfzAh");
export default FramerqsZ57VqYm;
FramerqsZ57VqYm.displayName = "Link Wrap";
FramerqsZ57VqYm.defaultProps = { height: 24, width: 46 };
addPropertyControls(FramerqsZ57VqYm, {
  variant: {
    options: ["ScnR6mzJS", "f9FkCxewy"],
    optionTitles: ["Primary", "Mobile"],
    title: "Variant",
    type: ControlType.Enum,
  },
  jcuP8BOF2: { title: "Link", type: ControlType.Link },
  k7NjW2jq9: {
    defaultValue: "About",
    displayTextArea: false,
    title: "Title",
    type: ControlType.String,
  },
  brFlQ7gXH: { title: "Click", type: ControlType.EventHandler },
});
addFonts(
  FramerqsZ57VqYm,
  [
    {
      explicitInter: true,
      fonts: [
        {
          cssFamilyName: "Rubik",
          source: "google",
          style: "normal",
          uiFamilyName: "Rubik",
          url: "https://fonts.gstatic.com/s/rubik/v31/iJWZBXyIfDnIV5PNhY1KTN7Z-Yh-NYi1VU80V4bVkA.woff2",
          weight: "500",
        },
      ],
    },
  ],
  { supportsExplicitInterCodegen: true }
);
export const __FramerMetadata__ = {
  exports: {
    default: {
      type: "reactComponent",
      name: "FramerqsZ57VqYm",
      slots: [],
      annotations: {
        framerContractVersion: "1",
        framerDisplayContentsDiv: "false",
        framerImmutableVariables: "true",
        framerIntrinsicHeight: "24",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"f9FkCxewy":{"layout":["auto","auto"]},"hnvpbaG7F":{"layout":["auto","auto"]}}}',
        framerComponentViewportWidth: "true",
        framerVariables:
          '{"jcuP8BOF2":"link","k7NjW2jq9":"title","brFlQ7gXH":"click"}',
        framerColorSyntax: "true",
        framerAutoSizeImages: "true",
        framerIntrinsicWidth: "46",
      },
    },
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    __FramerMetadata__: { type: "variable" },
  },
};
//# sourceMappingURL=./qsZ57VqYm.map
