// Generated by Framer (ed41f9e)
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ControlType,
  cx,
  getLoadingLazyAtYPosition,
  Image,
  Link,
  RichText,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
const serializationHash = "framer-IGkgT";
const variantClassNames = { ecKJFJbaf: "framer-v-3ngzz6" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
const transition1 = {
  damping: 60,
  delay: 0,
  mass: 1,
  stiffness: 500,
  type: "spring",
};
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)]
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion.create(React.Fragment);
const getProps = ({ height, id, link, width, ...props }) => {
  return { ...props, CXNTUyBRt: link ?? props.CXNTUyBRt };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, CXNTUyBRt, ...restProps } =
    getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    defaultVariant: "ecKJFJbaf",
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId ?? defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsx(Link, {
          href: CXNTUyBRt,
          motionChild: true,
          nodeId: "ecKJFJbaf",
          openInNewTab: false,
          scopeId: "JdCJh0voU",
          smoothScroll: true,
          children: /*#__PURE__*/ _jsxs(motion.a, {
            ...restProps,
            ...gestureHandlers,
            className: `${cx(
              scopingClassNames,
              "framer-3ngzz6",
              className,
              classNames
            )} framer-125z5hj`,
            "data-framer-name": "Logo",
            layoutDependency: layoutDependency,
            layoutId: "ecKJFJbaf",
            ref: refBinding,
            style: { ...style },
            children: [
              /*#__PURE__*/ _jsx(Image, {
                background: {
                  alt: "",
                  fit: "fill",
                  intrinsicHeight: 439.2,
                  intrinsicWidth: 439.2,
                  loading: getLoadingLazyAtYPosition(
                    (componentViewport?.y || 0) +
                      (0 + ((componentViewport?.height || 36) - 0 - 36) / 2)
                  ),
                  pixelHeight: 549,
                  pixelWidth: 549,
                  sizes: "36px",
                  src: "/framerusercontent.com/images/9MmTiVdHeXp0f9VArQEJS3cmGrs.png?scale-down-to=512&width=549&height=549",
                  srcSet:
                    "/framerusercontent.com/images/9MmTiVdHeXp0f9VArQEJS3cmGrs.png?scale-down-to=512&width=549&height=549 512w,/framerusercontent.com/images/9MmTiVdHeXp0f9VArQEJS3cmGrs.png?width=549&height=549 549w",
                },
                className: "framer-1od1srz",
                "data-framer-name": "Logo",
                layoutDependency: layoutDependency,
                layoutId: "D7Ii7lRsI",
              }),
              /*#__PURE__*/ _jsx(RichText, {
                __fromCanvasComponent: true,
                children: /*#__PURE__*/ _jsx(React.Fragment, {
                  children: /*#__PURE__*/ _jsx(motion.p, {
                    style: {
                      "--font-selector": "R0Y7UnViaWstNTAw",
                      "--framer-font-family":
                        '"Rubik", "Rubik Placeholder", sans-serif',
                      "--framer-font-size": "24px",
                      "--framer-font-weight": "500",
                      "--framer-letter-spacing": "-0.02em",
                      "--framer-text-color":
                        "var(--extracted-r6o4lv, var(--token-1d3eed3f-60b2-4eeb-8b1b-2d0206799803, rgb(38, 38, 38)))",
                    },
                    children: "Socks",
                  }),
                }),
                className: "framer-1to0n99",
                fonts: ["GF;Rubik-500"],
                layoutDependency: layoutDependency,
                layoutId: "FPsAieABJ",
                style: {
                  "--extracted-r6o4lv":
                    "var(--token-1d3eed3f-60b2-4eeb-8b1b-2d0206799803, rgb(38, 38, 38))",
                  "--framer-link-text-color": "rgb(0, 153, 255)",
                  "--framer-link-text-decoration": "underline",
                },
                verticalAlignment: "top",
                withExternalLayout: true,
              }),
            ],
          }),
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-IGkgT.framer-125z5hj, .framer-IGkgT .framer-125z5hj { display: block; }",
  ".framer-IGkgT.framer-3ngzz6 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; text-decoration: none; width: min-content; }",
  ".framer-IGkgT .framer-1od1srz { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 36px); overflow: visible; position: relative; width: 36px; }",
  ".framer-IGkgT .framer-1to0n99 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 36
 * @framerIntrinsicWidth 113
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]}}}
 * @framerVariables {"CXNTUyBRt":"link"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */ const FramerJdCJh0voU = withCSS(Component, css, "framer-IGkgT");
export default FramerJdCJh0voU;
FramerJdCJh0voU.displayName = "Logo";
FramerJdCJh0voU.defaultProps = { height: 36, width: 113 };
addPropertyControls(FramerJdCJh0voU, {
  CXNTUyBRt: { title: "Link", type: ControlType.Link },
});
addFonts(
  FramerJdCJh0voU,
  [
    {
      explicitInter: true,
      fonts: [
        {
          cssFamilyName: "Rubik",
          source: "google",
          style: "normal",
          uiFamilyName: "Rubik",
          url: "https://fonts.gstatic.com/s/rubik/v31/iJWZBXyIfDnIV5PNhY1KTN7Z-Yh-NYi1VU80V4bVkA.woff2",
          weight: "500",
        },
      ],
    },
  ],
  { supportsExplicitInterCodegen: true }
);
export const __FramerMetadata__ = {
  exports: {
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    default: {
      type: "reactComponent",
      name: "FramerJdCJh0voU",
      slots: [],
      annotations: {
        framerVariables: '{"CXNTUyBRt":"link"}',
        framerContractVersion: "1",
        framerIntrinsicHeight: "36",
        framerColorSyntax: "true",
        framerIntrinsicWidth: "113",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","auto"]}}}',
        framerComponentViewportWidth: "true",
        framerAutoSizeImages: "true",
        framerImmutableVariables: "true",
        framerDisplayContentsDiv: "false",
      },
    },
    __FramerMetadata__: { type: "variable" },
  },
};
//# sourceMappingURL=./JdCJh0voU.map
